<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="752,4118.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="102">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Using the workbook and data table activities we are required to add another column to our excel file which will contain the estimated value of the produce.&#xA;We can calculate the estimated value by multiplying the Quantity with the Pricer per Kg" DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="608,4053.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ProductionTracker" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="This workbook activity requires 3 input field, 2 of which are mandatory*.&#xA;-Range - The range you want to read from the spreadsheet.(ex. A1:C3, A:A) We can also leave the range empty to read everything from that spread sheet.&#xA;-* SheetName - The name of the sheet you want to read from.&#xA;-* Workbook Path - The path to the excel file&#xA;&#xA;We checked the AddHeaders option to add the headers to our data table.&#xA;&#xA;At the end we save everything into the &quot;dt_ProductionTracker&quot; data table type variable." DataTable="[dt_ProductionTracker]" DisplayName="Read Track Sheet - VegetablesProduction.xlsx" sap:VirtualizedContainerService.HintSize="545.6,340" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Tracker" WorkbookPath="Input\VegetablesProduction.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="This activity allows us to add a Data Column to our data table.&#xA;We can either use the DataColumn object to add the data column or the ColumnName, in our case it's easier to use the ColumnName option.&#xA;&#xA;We are also indicating to which data table to add the data column to." ColumnName="Estimated Value" DataTable="[dt_ProductionTracker]" DisplayName="Add 'Estimated Value' Data Column" sap:VirtualizedContainerService.HintSize="545.6,328" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:AddDataColumn>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Using this activity we iterate through each row in our dt_ProductionTracker data table. " DataTable="[dt_ProductionTracker]" DisplayName="For Each Row in ProductionTracker DataTable" sap:VirtualizedContainerService.HintSize="545.6,529.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,381.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap2010:Annotation.AnnotationText="Using this activity we make the calculations for the estimated value of the crops.&#xA;We are multiplying the quantity of crops with the price per kg to create an estimated value of the produce.&#xA;&#xA;We are also using the &quot;Cint&quot; syntax to convert the quantity and price to a type to which we can apply arithemetic operations. &#xA;The same can be applied to &quot;Cdec&quot; and also allow us to use the decimals from &quot;Price per Kg&quot;.&#xA;&#xA;EstimatedValue = Quantity * Price per Kg" DisplayName="Assign Estimated Value" sap:VirtualizedContainerService.HintSize="433.6,269.6" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[CurrentRow("Estimated Value")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[Cint(CurrentRow("Quantity")) * Cdec(CurrentRow("Price per Kg"))]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="This activity writes the updated data table to a new sheet inside the excel file." DataTable="[dt_ProductionTracker]" DisplayName="Write Updated ProductionTracker" sap:VirtualizedContainerService.HintSize="545.6,160" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Tracker_Updated" WorkbookPath="Output\dt_Vegetables.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteRange>
    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="545.6,2364" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="Output\dt_Vegetables.xlsx">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Pivot_Chart" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="512,2094.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap:VirtualizedContainerService.HintSize="449.6,1141.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uix:NClick ClickType="Single" DisplayName="Click 'Format as Table'" sap:VirtualizedContainerService.HintSize="387.2,157.6" sap2010:WorkflowViewState.IdRef="NClick_1" InScope="[Pivot_Chart]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="Pivot_Chart" Version="V3">
                <uix:NClick.Target>
                  <uix:TargetAnchorable DesignTimeRectangle="1194, 111, 70, 96" DesignTimeScaleFactor="1.25" FriendlyName="'Format as Table'" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Styles' /&gt;&lt;uia automationid='FormatAsTableGallery' cls='NetUIAnchor' name='Format as Table' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Styles' /&gt;&lt;uia automationid='FormatAsTableGallery' cls='NetUIAnchor' name='Format as Table' role='Menu Item' check:fulltext='Format as Table' /&gt;" Guid="77c3ba0e-6554-4fec-a872-270d2031c876" ImageBase64="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" InformativeScreenshot="bda1b0fa163d5be6ee32a3ca22673e3e.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='dt_Vegetables - Excel' /&gt;" SearchSteps="Selector, FuzzySelector, Image" Version="V1" Visibility="Interactive" />
                </uix:NClick.Target>
              </uix:NClick>
              <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="387.2,178.4" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_3" InScope="[Pivot_Chart]" ScopeIdentifier="Pivot_Chart" Shortcuts="[d(hk)][k(down)][u(hk)][d(hk)][k(enter)][u(hk)]" Version="V3" />
              <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="None" DisplayName="Type Into '$J$13'" EmptyFieldMode="None" sap:VirtualizedContainerService.HintSize="387.2,218.4" sap2010:WorkflowViewState.IdRef="NTypeInto_1" InScope="[Pivot_Chart]" ScopeIdentifier="Pivot_Chart" Text="$A1:$G37" Version="V3">
                <uix:NTypeInto.Target>
                  <uix:TargetAnchorable DesignTimeRectangle="16, 68, 250, 25" DesignTimeScaleFactor="1.25" FriendlyName="'$J$13'" FullSelectorArgument="&lt;uia cls='NetUIRefedit' name='Where is the data for your table?' /&gt;" FuzzySelectorArgument="&lt;uia cls='NetUIRefedit' name='Where is the data for your table?' role='Edit Box' automationid='' check:text='$J$13' /&gt;" Guid="5abbba83-5385-4e54-b2e3-d66737607fa7" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAP4AAAAdCAYAAACKRtF9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAANuSURBVHhe7Z3NTttAFEaD383zWs7GeZYWWom2uyChJEqyRrBFYgcCkpAtv7dzJxl7Mr6xXTulVuc70hEOcUao0vG1XWF6j4+PtFgsdlytVpU+PT21cr1eQwj/kQgfwgDNwv9yfJp5/O3nX/fk+y8I4Scrhv/6+mp8f3+v9OPjo5UAgCLPz890fX1NV1dXdHFx0dqbmxuzJoPwAeggHCgHf3d3V7vDMnmN+/t7syavjfAB6CA8nR8eHsTe2nh7e2vOImqFP51OS53NZq2cz+eV9nq97T8JAP8/fGr+8vJi+jsUvBavyVO/Mvy3tzcxdl8p6LpKofsifBASHL6d0mUcHR1lVmHX47URPgAdpE74bvR14kf4AHScjoU/oiROaOQEb5WCns3GlKiExuJ7uVLovggfhERV+FL01n00DD+lWMfHARrj1As/JdWLKBnboPm1s79Ks9Dd96NkvBP4QDmfifo0QfggQMrCl2L3lWgQvp70UY/i1E58/TUpC19Per2/Su3E11/1/jb6cRLpkJX+XuSFP6F+f5C9NgcBtXmN8EFI1Anf3fZfSzQIn6d9TGnpqb4bPm8rSitO9fkA4E/8HQcK4YMgKQvfxQ+/jAbhTymN+dQ7prhW+DNKeVpHilSL8Hniq8FmG+GDkOhM+OzInKLroL3r+4274duwzf6F6/v8fQ6ft7PgecrzZ7Q2eoQPQqNT4du7+omZ/v7kL4Zv7+onZvoXJ78YvqO5xt/e4EP4ICQ6Gb65uRfpyEd++Epf17txOzf3eP+dg0J1+PP5wKw50NsIH4RE3fD/hAbh27v42/BHCUXmZl8evrkMyKa6vYu/DX/M+yvvoCCEP+lT3zm9n/R5TUx8EB5l4btTfp8SDcLf3tzT8W3Mp3123c8HAidqc3PP3d+b9mxx4vOEdz6H/8cHgdKZ8DfaU/180rv6Yeen+v73i9opv0+ED0KiLPymtAi/XCnoukqxuyJ8EBIIfyvCByHBvzNvfx//kPKahfD5iR9S+FZpIV/pCTt1BADk8FNy+Gk5UmNt5Mdv8dN9ED4AHcQ+c49DPcTk5zX4QCI+cw/hA9AdONDLy0s6Ozuj4XDYyvPzc3OKz2sye8O3fj35kSk9E/9Q8g8CIfw8C+G7LpfLTOmv6PhKfymnjvaHgBB+rggfwuBc02/qam7JJkWwOwAAAABJRU5ErkJggg==" InformativeScreenshot="e1f362896dadc777f62848e2846b5b6d.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='NUIDialog' title='Create Table' /&gt;" SearchSteps="Selector, FuzzySelector, Image" Version="V1" Visibility="Interactive" />
                </uix:NTypeInto.Target>
              </uix:NTypeInto>
              <uix:NCheck Action="Check" DisplayName="Check/Uncheck 'My table has headers'" sap:VirtualizedContainerService.HintSize="387.2,157.6" sap2010:WorkflowViewState.IdRef="NCheck_1" InScope="[Pivot_Chart]" ScopeIdentifier="Pivot_Chart" Version="V3">
                <uix:NCheck.Target>
                  <uix:TargetAnchorable DesignTimeRectangle="16, 97, 153, 21" DesignTimeScaleFactor="1.25" ElementType="CheckBox" FriendlyName="'My table has headers'" FullSelectorArgument="&lt;uia cls='NetUICheckbox' name='My table has headers' /&gt;" FuzzySelectorArgument="&lt;uia cls='NetUICheckbox' name='My table has headers' role='CheckBox' automationid='' check:fulltext='My table has headers' /&gt;" Guid="a6291c67-4994-46a4-869f-d2df6d823d49" InformativeScreenshot="3e31b6c9a7308e4a080b9068078378c1.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='NUIDialog' title='Create Table' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V1" Visibility="Interactive" />
                </uix:NCheck.Target>
              </uix:NCheck>
              <uix:NClick ClickType="Single" DisplayName="Click 'OK'" sap:VirtualizedContainerService.HintSize="387.2,157.6" sap2010:WorkflowViewState.IdRef="NClick_2" InScope="[Pivot_Chart]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="Pivot_Chart" Version="V3">
                <uix:NClick.Target>
                  <uix:TargetAnchorable DesignTimeRectangle="79, 122, 88, 30" DesignTimeScaleFactor="1.25" ElementType="Button" FriendlyName="'OK'" FullSelectorArgument="&lt;uia cls='NetUIButton' name='OK' /&gt;" FuzzySelectorArgument="&lt;uia cls='NetUIButton' name='OK' role='Button' automationid='' check:fulltext='OK' /&gt;" Guid="8714f4e3-458b-463c-9ba9-180475a07636" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAFwAAAAiCAYAAADSx77pAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAG9SURBVGhD7doxbsIwFIBh3yDnicQNco5M7dalE/QEeGNrb5GFSq1aDtAKVQypGNiKIFIWllbRa56BNnZMJKLwsNEbfokkDsMXxyAlIs9z4OhicOIYnLga+HSRQW/0CcHdDMTtB9ey6H6uLE1fDRwHIPTgcQnZ5geKouBahHbDyQqCwayGroFHD3OQk7X1S7jj64+/1GpRNdbA8Vbgmd1d2eZbzXLNWNsowW0ncu1DU81Y22DwzmNw4hicOAYnjsGJ8ww8gVgIEH+FIFPzuLEviS3jzpc/4KmEsESOk6Z9BrjCjiHZj3cgb8CTWEAo0/oxRA0lpGq7Au4gNuYJuGWp0I7tYXfjEpz57mFjfoCrpeMQYPVi4Oft+m69GxzoMmd4uoXX1ntH8gQ8BRkeuYbbfmQdyBPwMhtg7S+fcSeocw7dGefJH3Bsh/7/P9xc1w1wTF0Ud9Z0v8AvIAYnjsGJY3DiGJy4RnB8RYIfIncXPkRuBMdH+v3x0noyd3zD15V6IahqrIFPF2s1y/ElFp7p7UM7fCcFLdG0aqyBYzggGr2DuH4GcfXEtSi4eYGefKthYzVw7rQxOHEMTloOv0QY+HhvdjXtAAAAAElFTkSuQmCC" InformativeScreenshot="4de4a77e08b9f7678084bf5201af69b1.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='NUIDialog' title='Create Table' /&gt;" SearchSteps="Selector, FuzzySelector, Image" Version="V1" Visibility="Interactive" />
                </uix:NClick.Target>
              </uix:NClick>
            </Sequence>
            <ueab:CreatePivotTableXv2 DestinationRange="[Pivot_Chart.Sheet(&quot;Chart_Pivot&quot;)]" DisplayName="Create Pivot Table" sap:VirtualizedContainerService.HintSize="449.6,524" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_1" LayoutRowType="Compact" Range="[Pivot_Chart.Sheet(&quot;Tracker_Updated&quot;)]" TableName="Chart_Pivot" ValuesMode="Columns">
              <ueab:CreatePivotTableXv2.Body>
                <ActivityAction>
                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Vegetables" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_1" Type="Row" />
                    <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Quantity" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_2" Type="Value" />
                    <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Estimated Value" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_3" Type="Value" />
                  </Sequence>
                </ActivityAction>
              </ueab:CreatePivotTableXv2.Body>
            </ueab:CreatePivotTableXv2>
            <ueab:InsertExcelChartX InsertedChart="{x:Null}" ChartCategory="Column" ChartHeight="211" ChartType="xlColumnClustered" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="449.6,236.8" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_1" InsertIntoSheet="[Pivot_Chart.Sheet(&quot;Chart_Pivot&quot;)]" Left="60" Range="[Pivot_Chart.Sheet(&quot;Chart_Pivot&quot;)]" Top="20" />
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
    </ueab:ExcelApplicationCard>
  </Sequence>
</Activity>